const express = require("express");
const mysql = require("mysql");
const bodyParser = require("body-parser");
const cors = require("cors");

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Konfigurasi koneksi database
const db = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "", // Sesuaikan dengan password MySQL Anda
  database: "resto_db", // Nama database
});

// Koneksi ke database
db.connect((err) => {
  if (err) {
    console.log("Database connection error:", err);
  } else {
    console.log("Connected to MySQL database.");
  }
});

// Endpoint untuk mendapatkan daftar menu makanan
app.get("/api/menu/makanan", (req, res) => {
  const sql = "SELECT * FROM makanan";
  db.query(sql, (err, result) => {
    if (err) throw err;
    res.send(result);
  });
});

// Endpoint untuk mendapatkan daftar menu minuman
app.get("/api/menu/minuman", (req, res) => {
  const sql = "SELECT * FROM minuman";
  db.query(sql, (err, result) => {
    if (err) throw err;
    res.send(result);
  });
});

// Endpoint untuk menyimpan pesanan
app.post("/api/order", (req, res) => {
  const { nama, jumlah, harga } = req.body;
  const sql = "INSERT INTO orders (nama, jumlah, harga) VALUES (?, ?, ?)";
  db.query(sql, [nama, jumlah, harga], (err, result) => {
    if (err) throw err;
    res.send({ message: "Order added successfully!" });
  });
});

// Endpoint untuk mendapatkan semua pesanan
app.get("/api/orders", (req, res) => {
  const sql = "SELECT * FROM orders";
  db.query(sql, (err, result) => {
    if (err) throw err;
    res.send(result);
  });
});

// Jalankan server
const PORT = 5000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
